/*package com.eci.paymentsservice.repository;

import com.eci.paymentsservice.model.Payment;
import org.springframework.data.jpa.repository.JpaRepository;
import java.util.Optional;
import java.util.UUID;
*/
/*public interface PaymentRepository extends JpaRepository<Payment, UUID> {*/
    /*Optional<Payment> findByOrderId(UUID orderId); */
    /*Optional<Payment> findByOrderId(String orderId);
    Optional<Payment> findByIdempotencyKey(String idempotencyKey);
} */

package com.eci.paymentsservice.repository;

import com.eci.paymentsservice.model.Payment;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.stereotype.Repository;

import java.util.List;
import java.util.Optional;
import java.util.UUID;

@Repository
public interface PaymentRepository extends JpaRepository<Payment, UUID> {

    //  Fetch all payments for a given order (one-to-many support)
    //List<Payment> findByOrderId(Long orderId);
    List<Payment> findByOrderId(String orderId); 
    //  Find a payment using an idempotency key (to prevent duplicate charges)
    Optional<Payment> findByIdempotencyKey(String idempotencyKey);

    //  Fetch all payments for a customer (useful for reports or UI)
    List<Payment> findByCustomerId(Long customerId);
}



