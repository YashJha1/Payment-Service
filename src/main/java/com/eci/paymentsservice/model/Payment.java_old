package com.eci.paymentsservice.model;

import jakarta.persistence.*;
import lombok.*;
import org.hibernate.annotations.GenericGenerator;

import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.UUID;

@Entity
@Table(name = "payments")
@Data
@NoArgsConstructor
@AllArgsConstructor
@Builder
public class Payment {

    @Id
    @GeneratedValue(generator = "UUID")
    @GenericGenerator(
        name = "UUID",
        strategy = "org.hibernate.id.UUIDGenerator"
    )
    @Column(name = "payment_id", updatable = false, nullable = false)
    private UUID paymentId;

    // ðŸ”¹ Link payment with a specific order
    @Column(nullable = false)
    //private Long orderId;
    private String orderId;
    
    // ðŸ”¹ Link to the customer for tracking / reporting
    private Long customerId;

    @Column(nullable = false, precision = 10, scale = 2)
    private BigDecimal amount;

    @Column(nullable = false)
    private String currency = "INR";  // default value if not passed

    @Column(name = "method")
    private String paymentMethod = "UPI"; // can be changed via API

    @Column(nullable = false)
    private String status = "PENDING"; // default status when created

    private String providerTransactionId;
    private String idempotencyKey;

    private OffsetDateTime createdAt;
    private OffsetDateTime updatedAt;

    @PrePersist
    protected void onCreate() {
        this.createdAt = OffsetDateTime.now();
        this.updatedAt = OffsetDateTime.now();
    }

    @PreUpdate
    protected void onUpdate() {
        this.updatedAt = OffsetDateTime.now();
    }
}

